AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Stack for instastories-houessou-com
Globals:
  Function:
    Runtime: python3.8
Resources:
  EventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-events-table
      AttributeDefinitions:
      - AttributeName: requestId
        AttributeType: S
      KeySchema:
      - AttributeName: requestId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  MainHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      CorsConfiguration:
        AllowMethods:
        - GET
        - POST
        - DELETE
        AllowOrigins:
        - https://instastories.houessou.com
        AllowHeaders:
        - '*'
  recordEvents:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: recordEvents
      Handler: record_events.lambda_handler
      Environment:
        Variables:
          EVENTS_TABLE:
            Ref: EventsTable
      Events:
        getStoriesTaggedApi:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: MainHttpApi
            Path: /{account_to_mention}/stories
            Method: GET
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:DescribeTable
          - dynamodb:BatchWriteItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          Resource:
          - Fn::GetAtt:
            - EventsTable
            - Arn
        - Effect: Allow
          Action:
          - dynamodb:ListTables
          Resource: '*'
          Condition: {}
  getStoriesTagged:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getStoriesTagged
      Handler: instaScraper.get_stories_tagged.lambda_handler
      Timeout: 900
      Environment:
        Variables:
          EVENTS_TABLE:
            Ref: EventsTable
      Events:
        DynamoDBStreams:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - EventsTable
              - StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 10
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:DescribeTable
          - dynamodb:BatchWriteItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          Resource:
          - Fn::GetAtt:
            - EventsTable
            - Arn
        - Effect: Allow
          Action:
          - dynamodb:ListTables
          Resource: '*'
          Condition: {}
Outputs:
  MainHttpApi:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: MainHttpApi
        - .execute-api.us-east-1.amazonaws.com/dev
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MainHttpApiURL
  StackName:
    Value:
      Fn::Sub: ${AWS::StackName}
